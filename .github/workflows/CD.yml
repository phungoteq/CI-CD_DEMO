name: CD_Demo

on:
  push:
    branches:

jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_NOTES: ${{ steps.extractReleaseNotes.outputs.RELEASE_NOTES }}
      BRANCH_NAME: ${{ steps.extractBranch.outputs.BRANCH_NAME }}
    
    steps:
      - uses: actions/checkout@v4
        
      - id: extractReleaseNotes
        run: |
          TAG_NAME=$(echo $GITHUB_REF | sed 's|refs/tags/||')
          RELEASE_NOTES=$(git tag -l --format='%(contents)' $TAG_NAME)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - id: extractBranch
        run: |
          COMMIT_SHA=$(git rev-list -n 1 $GITHUB_REF)
          BRANCH_NAME=$(git branch -r --contains $COMMIT_SHA | sed 's|origin/||' | head -n 1)
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT

  unit-test:
    needs: [prebuild]
    runs-on: ubuntu-latest
    outputs:
      test_passed: ${{ steps.test_status.outputs.passed }}
    
    steps:
      - uses: actions/checkout@v4
        
      - uses: actions/setup-python@v5
        
      - name: Run tests
        id: test_status
        continue-on-error: true
        run: |
          # Your actual testing commands here 
          echo "passed=$?" >> $GITHUB_OUTPUT

  staging-deployment:
    needs: [unit-test]
    runs-on: ubuntu-latest
    
    steps:
      - name: Conditional Deployment Gatekeeper
        id: check-deployment-condition
        
        env:
          TEST_RESULT_PASSED: ${{ needs.unit-test.outputs.test_passed }}
        
        run: |
          echo "Test Result Status = ${TEST_RESULT_PASSED}"
          
          # Only allow auto-deployment when tests pass 
          [[ "$TEST_RESULT_PASSED" == "0" ]] || exit 1

      - name: Perform Staging Deployment 
        # Only runs when previous step succeeds 
        uses your-deployment-action@v2

  production-deployment:
    name: Production Deployment Gate 
    
     # Require explicit approval even when automated checks pass 
     environment:
       name: production 
       url:${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    
     # Only trigger after staging validation 
     needs:[staging-deployment] 
     
     steps:[your-production-deployment-steps]
