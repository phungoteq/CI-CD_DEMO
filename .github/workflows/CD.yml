name: CD Pipeline

on:
  push:
    branches:
      - main
      - feature/*
    tags:
      - 'v*.*.*'

env:
  PYTHON_VERSION: "3.11"

jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      release_notes: ${{ steps.get-release-notes.outputs.content }}
      branch_name: ${{ steps.get-branch-name.outputs.name }}

    steps:
    - uses: actions/checkout@v4

    - name: Extract release notes
      id: get-release-notes
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        NOTES=$(git tag -l --format='%(contents)' "$TAG_NAME" || echo "No release notes")
        echo "content=$NOTES" >> $GITHUB_OUTPUT

    - name: Get branch name
      id: get-branch-name
      run: |
        BRANCH=${GITHUB_REF#refs/heads/}
        echo "name=$BRANCH" >> $GITHUB_OUTPUT

  unit-test:
      needs: prebuild
      runs-on: ubuntu-latest
      outputs:
        test_status: ${{ steps.run-tests.outputs.result }}

      steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: pip install poetry==1.8.2

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests
        id: run-tests
        continue-on-error: true
        run: |
          if poetry run pytest; then
            echo "result=success" >> $GITHUB_OUTPUT
          else
            echo "result=failure" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Print simplified status
        run: |
          echo "=== TEST SUMMARY ==="
          echo "Status: ${{ steps.run-tests.outputs.result }}"
          echo "===================="

  manual-approval-cd:
      needs: unit-test
      if: needs.unit-test.outputs.test_status == 'failure'
      runs-on: ubuntu-latest
      environment:
        name: production-approval
      
      steps:
        - name: Manual Approval Required
          run: |
            echo "Tests failed - Manual approval required for deployment"
            echo "Please review the test results and approve if deployment should proceed"

  deploy:
      needs: [prebuild, unit-test, manual-approval-cd]
      if: |
        always() &&
        (needs.unit-test.outputs.test_status == 'success' || needs.manual-approval-cd.result == 'success')
      runs-on: ubuntu-latest
      environment:
        ${{ needs.unit-test.outputs.test_status == 'success' && 'production' || 'production-approval' }}
      steps:
        - uses: actions/checkout@v4
        
        - name: Show deployment info 
          run: |
            echo "ðŸš€ Deploying version ${{ github.ref_name }}"
            echo "ðŸ“Œ Source branch: ${{ needs.prebuild.outputs.branch_name }}"
