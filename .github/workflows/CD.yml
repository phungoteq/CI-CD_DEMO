name: CD_Demo
on:
  push:
    tags:
      - 'v*'

jobs:
  prebuild:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_NOTES: ${{ steps.extractReleaseNotes.outputs.RELEASE_NOTES }}
      BRANCH_NAME: ${{ steps.extractBranch.outputs.BRANCH_NAME }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: extractReleaseNotes
        run: |
          TAG_NAME=$(echo $GITHUB_REF | sed 's|refs/tags/||')
          echo "Fetching release notes for tag: $TAG_NAME"
          RELEASE_NOTES=$(git tag -l --format='%(contents)' $TAG_NAME)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "$RELEASE_NOTES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - id: extractBranch
        run: |
          COMMIT_SHA=$(git rev-list -n 1 $GITHUB_REF)
          BRANCH_NAME=$(git branch -r --contains $COMMIT_SHA | sed 's|origin/||' | head -n 1)
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_OUTPUT

  unit-test:
    needs: [prebuild]
    runs-on: ubuntu-latest
    outputs:
      test_passed: ${{ steps.test_status.outputs.passed }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          
      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - --version 1.8.2
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Poetry Install Dependencies
        run: poetry install

      - name: create .env file
        run: cp .env.example .env

      - name: Run tests
        id: test_status
        continue-on-error: true
        run: |
          if make test; then
            echo "passed=true" >> $GITHUB_OUTPUT
          else
            echo "passed=false" >> $GITHUB_OUTPUT
          fi

  manual-approval:
    needs: [unit-test]
    runs-on: ubuntu-latest
    if: needs.unit_test.outputs.test_passed == 'false'
    environment: 
      name: production-approval
      url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - name: Manual Approval
        run: echo "Waiting for manual approval to proceed with deployment..."

  deploy:
    needs: [prebuild, unit-test]
    runs-on: ubuntu-latest
    if: |
      needs.unit_test.outputs.test_passed == 'true'
    environment:
      name: production-approval
      url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python - --version 1.8.2
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
          poetry install

      - name: Build application
        run: echo "Building application..."

      - name: Deploy application
        run: |
          echo "Deploying version ${{ github.ref_name }}"
          echo "From branch: ${{ needs.prebuild.outputs.BRANCH_NAME }}"
          echo "Release notes: ${{ needs.prebuild.outputs.RELEASE_NOTES }}"
